{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/MovieFilter/MovieFilter.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","MovieFilter","state","query","handleChange","event","target","value","sendFilteredList","setState","filterMovies","list","filter","searchName","toLowerCase","includes","props","this","htmlFor","type","id","onChange","placeholder","Component","App","filteredMovies","moviesFromServer","applyFilteredList","bind","filteredList","ReactDOM","render","document","getElementById"],"mappings":"swEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,4MASEC,MAAQ,CACNC,MAAO,IAVX,EAaEC,aAAe,SAACC,GACd,IAAMF,EAAQE,EAAMC,OAAOC,MAE3B,EAAKC,iBAAiBL,GAEtB,EAAKM,SAAS,CACZN,MAAOE,EAAMC,OAAOC,SAnB1B,EAuBEG,aAAe,SAACC,EAAMR,GAQpB,OAPsBQ,EAAKC,QAAO,SAACd,GACjC,IAAMe,EAAaV,EAAMW,cAEzB,OAAOhB,EAAMZ,MAAM4B,cAAcC,SAASF,IACrCf,EAAMX,YAAY2B,cAAcC,SAASF,OA5BpD,EAkCEL,iBAAmB,SAACL,GAAW,IAAD,EACS,EAAKa,MAAlCpB,EADoB,EACpBA,QAERY,EAH4B,EACZA,kBAEC,EAAKE,aAAad,EAAQO,KArC/C,uDAwCY,IACAA,EAAUc,KAAKf,MAAfC,MAER,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO4B,QAAQ,eAAe5B,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACE6B,KAAK,OACLC,GAAG,eACHb,MAAOJ,EACPkB,SAAUJ,KAAKb,aACfd,UAAU,QACVgC,YAAY,4BAzD1B,GAAiCC,aCGpBC,EAAb,kDACE,aAAe,IAAD,8BACZ,gBACKtB,MAAQ,CACXuB,eAAgBC,GAElB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBALb,EADhB,8DASoBC,GAChBZ,KAAKR,SAAS,CACZgB,eAAgBI,MAXtB,+BAeY,IACAJ,EAAmBR,KAAKf,MAAxBuB,eAER,OACE,yBAAKnC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEM,OAAQ8B,EACRlB,iBAAkBS,KAAKU,oBAEzB,kBAAC,EAAD,CAAY/B,OAAQ6B,KAEtB,yBAAKnC,UAAU,WAAf,0BA3BR,GAAyBiC,aCDzBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ebdf329d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class MovieFilter extends Component {\n  static propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    })).isRequired,\n    sendFilteredList: PropTypes.func.isRequired,\n  }\n\n  state = {\n    query: '',\n  }\n\n  handleChange = (event) => {\n    const query = event.target.value;\n\n    this.sendFilteredList(query);\n\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  filterMovies = (list, query) => {\n    const processedList = list.filter((movie) => {\n      const searchName = query.toLowerCase();\n\n      return movie.title.toLowerCase().includes(searchName)\n        || movie.description.toLowerCase().includes(searchName);\n    });\n\n    return processedList;\n  }\n\n  sendFilteredList = (query) => {\n    const { movies, sendFilteredList } = this.props;\n\n    sendFilteredList(this.filterMovies(movies, query));\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              value={query}\n              onChange={this.handleChange}\n              className=\"input\"\n              placeholder=\"Type search word\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { MovieFilter } from './components/MovieFilter';\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredMovies: moviesFromServer,\n    };\n    this.applyFilteredList = this.applyFilteredList.bind(this);\n  }\n\n  applyFilteredList(filteredList) {\n    this.setState({\n      filteredMovies: filteredList,\n    });\n  }\n\n  render() {\n    const { filteredMovies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MovieFilter\n            movies={moviesFromServer}\n            sendFilteredList={this.applyFilteredList}\n          />\n          <MoviesList movies={filteredMovies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}